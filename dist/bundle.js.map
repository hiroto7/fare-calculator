{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Direction.ts","webpack:///./src/OfficialLine.ts","webpack:///./src/ReverseIterator.ts","webpack:///./src/Section.ts","webpack:///./src/Station.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export enum Direction {\n    inbound = -1,\n    outbound = 1\n}\n","import { Direction } from \"./Direction\";\nimport Line from \"./Line\";\nimport ReverseIterator from \"./ReverseIterator\";\nimport Station, { StationOnLine, StationOnLine1, StationSubstance } from \"./Station\";\n\nexport class OfficialLine implements Line {\n    private rawName: string;\n    private rawCode: string | null;\n    private rawColor: string | null;\n    private rawStations?: ReadonlyArray<StationOnOfficialLine>;\n    private stationsOnLineMap?: ReadonlyMap<StationSubstance, StationOnOfficialLine>;\n\n    constructor(name: string, { code = null, color = null }: {\n        code?: string | null;\n        color?: string | null;\n    } = {}) {\n        this.rawName = name;\n        this.rawCode = code;\n        this.rawColor = color;\n    }\n\n    setStations(stations: Iterable<{\n        substance: StationSubstance;\n        distanceFromStart: number | null;\n        code?: string | null;\n    }>) {\n        const rawStations: StationOnOfficialLine[] = [];\n        const stationsOnLineMap: Map<StationSubstance, StationOnOfficialLine> = new Map();\n        for (const station of stations) {\n            const stationOnLine = new StationOnOfficialLine({ line: this, ...station });\n            rawStations.push(stationOnLine);\n            stationsOnLineMap.set(station.substance, stationOnLine);\n        }\n        this.rawStations = rawStations;\n        this.stationsOnLineMap = stationsOnLineMap;\n    }\n\n    name(): string {\n        return this.rawName;\n    }\n\n    code(): string | null {\n        return this.rawCode;\n    }\n\n    color(): string | null {\n        return this.rawColor;\n    }\n\n    stations(direction?: Direction): IterableIterator<StationOnLine>;\n    stations(direction: Direction,\n        { from, to }: { from?: Station; to?: Station; }): IterableIterator<StationOnLine> | null;\n    stations(direction: Direction = Direction.outbound,\n        { from, to }: { from?: Station; to?: Station; } = {}): IterableIterator<StationOnLine> | null {\n\n        if (this.rawStations === undefined) throw new Error();\n\n        let array: ReadonlyArray<StationOnOfficialLine>;\n        if (from === undefined && to === undefined) {\n            array = this.rawStations;\n        } else {\n            let fromOnLine: StationOnOfficialLine;\n            let toOnLine: StationOnOfficialLine;\n\n            if (from === undefined) {\n                fromOnLine = this.from();\n            } else {\n                let fromOnLine1 = this.onLineOf(from);\n                if (fromOnLine1 === null)\n                    return null;\n                fromOnLine = fromOnLine1;\n            }\n\n            if (to === undefined) {\n                toOnLine = this.to();\n            } else {\n                let toOnLine1 = this.onLineOf(to);\n                if (toOnLine1 === null)\n                    return null;\n                toOnLine = toOnLine1;\n            }\n\n            let fromIndex = this.rawStations.indexOf(fromOnLine);\n            let toIndex = this.rawStations.indexOf(toOnLine);\n\n            if (fromIndex < 0) throw new Error();\n            if (toIndex < 0) throw new Error();\n\n            if (direction * fromIndex > direction * toIndex) return null;\n            array = this.rawStations.slice(fromIndex, toIndex + 1);\n        }\n\n        if (direction === Direction.outbound)\n            return array[Symbol.iterator]();\n        else\n            return new ReverseIterator(array);\n    }\n\n    from(): StationOnOfficialLine {\n        if (this.rawStations === undefined) throw new Error();\n        return this.rawStations[0];\n    }\n\n    to(): StationOnOfficialLine {\n        if (this.rawStations === undefined) throw new Error();\n        return this.rawStations[this.rawStations.length - 1];\n    }\n\n    length(): number {\n        const length = this.distance(this.from(), this.to());\n        if (length === null) throw new Error();\n        return length;\n    }\n\n    onLineOf(station: Station): StationOnOfficialLine | null {\n        if (this.stationsOnLineMap === undefined) throw new Error();\n        return this.stationsOnLineMap.get(station.substance()) || null;\n    }\n\n    distance(station1: Station, station2: Station): number | null {\n        const station1OnLine = this.onLineOf(station1);\n        const station2OnLine = this.onLineOf(station2);\n        if (station1OnLine === null || station2OnLine === null) return null;\n\n        const d1 = station1OnLine.distanceFromStart;\n        const d2 = station2OnLine.distanceFromStart;\n        return d1 === null || d2 === null ? null : d2 - d1;\n    }\n\n    has(station: Station): boolean {\n        return this.onLineOf(station) !== null;\n    }\n}\n\nclass StationOnOfficialLine extends StationOnLine1 {\n    readonly distanceFromStart: number | null;\n\n    constructor({ line, substance, distanceFromStart, code = null }: {\n        line: OfficialLine,\n        substance: StationSubstance,\n        distanceFromStart: number | null,\n        code?: string | null\n    }) {\n        super({ line, substance, code });\n        this.distanceFromStart = distanceFromStart;\n    }\n}\n","export default class ReverseIterator<T> implements IterableIterator<T> {\n    private readonly array: ReadonlyArray<T>;\n    private index: number;\n\n    constructor(array: ReadonlyArray<T>) {\n        this.array = array;\n        this.index = array.length;\n    }\n\n    next(): IteratorResult<T> {\n        if (this.index <= 0) {\n            return {\n                done: true,\n                value: <T><unknown>undefined\n            }\n        } else {\n            this.index--;\n            return {\n                done: false,\n                value: this.array[this.index]\n            }\n        }\n    }\n\n    [Symbol.iterator](): this {\n        return this;\n    }\n}\n","import { Direction } from \"./Direction\";\nimport Line from \"./Line\";\nimport Station, { StationOnLine, StationOnLine1, StationSubstance } from \"./Station\";\n\nexport class Section implements Line {\n    private line: Line;\n    private direction: Direction;\n    private rawFrom?: Station;\n    private rawTo?: Station;\n    private stationsOnLineMap: Map<StationSubstance, StationOnLine>;\n\n    constructor({ line, direction, from, to, stations = [] }: {\n        line: Line,\n        direction: Direction,\n        from?: Station,\n        to?: Station,\n        stations?: Iterable<{\n            substance: StationSubstance;\n            distanceFromStart: number | null;\n            code?: string | null;\n        }>\n    }) {\n        this.line = line;\n        this.direction = direction;\n        this.rawFrom = from;\n        this.rawTo = to;\n\n        this.stationsOnLineMap = new Map();\n        for (const station of stations) {\n            this.stationsOnLineMap.set(station.substance, new StationOnLine1({ line: this, ...station }));\n        }\n    }\n\n    from() {\n        let from: StationOnLine | null;\n        if (this.rawFrom !== undefined)\n            from = this.rawFrom.on(this);\n        else if (this.direction === Direction.outbound)\n            from = this.line.from().on(this);\n        else\n            from = this.line.to().on(this);\n\n        if (from === null) throw new Error();\n        return from;\n    }\n\n    to() {\n        let to: StationOnLine | null;\n        if (this.rawTo !== undefined)\n            to = this.rawTo.on(this.line);\n        else if (this.direction === Direction.outbound)\n            to = this.line.to();\n        else\n            to = this.line.from();\n\n\n        if (to === null) throw new Error();\n        return to;\n    }\n\n    name() {\n        return this.line.name();\n    }\n\n    code() {\n        return this.line.code();\n    }\n\n    color() {\n        return this.line.color();\n    }\n\n    length() {\n        const length = this.line.distance(this.from(), this.to());\n        if (length === null) throw new Error();\n        return this.direction * length;\n    }\n\n    stations(direction?: Direction): IterableIterator<StationOnLine>\n    stations(direction: Direction,\n        { from, to }: { from?: Station, to?: Station }): IterableIterator<StationOnLine> | null\n    stations(direction: Direction = Direction.outbound,\n        { from, to }: { from?: Station, to?: Station } = {}): IterableIterator<StationOnLine> | null {\n\n        const stations = this.line.stations(direction, { from: this.from(), to: this.to() });\n\n        if (stations === null) {\n            if (from === undefined && to === undefined) throw new Error();\n            return null;\n        }\n\n        return new SectionIterator(this, stations);\n    }\n\n    onLineOf(station: Station): StationOnLine | null {\n        const substance = station.substance();\n        let onLine: StationOnLine | undefined = this.stationsOnLineMap.get(substance);\n\n        if (onLine === undefined) {\n            if (!new Set(this.stations()).has(station.on(this.line)!)) return null;\n            onLine = new StationOnLine1({ line: this, substance, code: null });\n            this.stationsOnLineMap.set(substance, onLine);\n        }\n\n        return onLine;\n    }\n\n    distance(station1: Station, station2: Station): number | null {\n        if (!this.has(station1) || !this.has(station2)) return null;\n        return this.line.distance(station1, station2);\n    }\n\n    has(station: Station): boolean {\n        return station.on(this) !== null;\n    }\n}\n\nclass SectionIterator implements IterableIterator<StationOnLine> {\n    constructor(private readonly line: Line,\n        private readonly iterator: Iterator<Station>) { }\n\n    next(): IteratorResult<StationOnLine> {\n        const result = this.iterator.next();\n        if (result.done) {\n            return {\n                done: true,\n                value: <StationOnLine><unknown>undefined\n            };\n        } else {\n            const value: StationOnLine | null = result.value.on(this.line);\n\n            if (value === null) throw Error();\n\n            return { done: false, value };\n        }\n    }\n\n    [Symbol.iterator](): this { return this; }\n}\n","import Line from \"./Line\";\n\nexport default interface Station {\n    name(): string;\n    lines(): IterableIterator<Line>;\n    isSeasonal(): boolean;\n    on(line: Line): StationOnLine | null;\n    substance(): StationSubstance;\n}\n\nexport interface WritableStation extends Station {\n    add(line: Line, onLine: StationOnLine): void;\n    // TODO: 特定都区市内への対応\n    setOptions({ isSeasonal }: { isSeasonal?: boolean }): void;\n}\n\nexport interface StationSubstance extends Station {\n    readonly isSubstance: true;\n    substance(): this;\n}\n\nexport interface StationOnLine extends Station {\n    // next(): StationOnLine;\n    // previous(): StationOnLine;\n    line(): Line;\n    code(): string | null;\n}\n\nexport class Station1 implements StationSubstance, WritableStation {\n    readonly isSubstance: true = true;\n    private readonly rawName: string;\n    private rawIsSeasonal: boolean = false;\n    private readonly rawLines: Set<Line> = new Set();\n    private readonly stationsOnLines: Map<Line, StationOnLine> = new Map();\n\n    constructor(name: string) {\n        this.rawName = name;\n    }\n\n    name(): string {\n        return this.rawName;\n    }\n\n    lines(): IterableIterator<Line> {\n        return this.rawLines[Symbol.iterator]();\n    }\n\n    isSeasonal(): boolean {\n        return this.rawIsSeasonal;\n    }\n\n    on(line: Line): StationOnLine | null {\n        // return this.stationsOnLines.get(line) || null;\n        return line.onLineOf(this);\n    }\n\n    substance(): this {\n        return this;\n    }\n\n    add(line: Line, onLine: StationOnLine) {\n        this.rawLines.add(line);\n        this.stationsOnLines.set(line, onLine);\n    }\n\n    setOptions({ isSeasonal }: {\n        isSeasonal?: boolean\n    }) {\n        if (isSeasonal !== undefined)\n            this.rawIsSeasonal = isSeasonal;\n    }\n}\n\nexport class StationOnLine1 implements StationOnLine {\n    private readonly rawSubstance: StationSubstance;\n    private readonly rawCode: string | null;\n    private readonly rawLine: Line;\n\n    constructor({ line, substance, code = null }: {\n        line: Line,\n        substance: StationSubstance,\n        code?: string | null\n    }) {\n        this.rawLine = line;\n        this.rawSubstance = substance;\n        this.rawCode = code;\n    }\n\n    name(): string { return this.substance().name(); }\n    lines(): IterableIterator<Line> { return this.substance().lines(); }\n    isSeasonal(): boolean { return this.substance().isSeasonal(); }\n\n    substance(): StationSubstance { return this.rawSubstance; }\n    code(): string | null { return this.rawCode; }\n    line(): Line { return this.rawLine; }\n\n    on(line: Line): StationOnLine | null {\n        if (line === this.line())\n            return this;\n        else\n            return this.substance().on(line);\n    }\n}\n\n/*\nimport Line from \"./Line\";\n\nexport default interface Station {\n    name(): string;\n    center(): StationCenter;\n    lines(): IterableIterator<Line>;\n    onLine(line: Line): StationOnLine;\n}\n\nexport interface Station2 extends Station {\n\n}\n*/\n\n/* ex: 東京駅．乗り入れ路線は東海道線，宇都宮線，京浜東北線… */\n/*\nexport class StationCenter implements Station {\n    private rowName: string;\n\n    constructor(name: string) {\n        this.rowName = name;\n    }\n\n    name(): string {\n        return this.rowName;\n    }\n\n    center(): this {\n        return this;\n    }\n\n    onLine(line: Line): StationOnLine {\n\n    }\n}\n*/\n\n/* ex: 東海道線の東京駅 */\n/*\nexport class StationOnLine implements Station2 {\n    public readonly line: Line;\n\n\n    constructor(\n        line: Line,\n        private readonly rowCenter: StationCenter,\n        private readonly rowName?: string) {\n\n    }\n\n    name(): string {\n        if (this.rowName === undefined)\n            return this.center().name();\n        else\n            return this.rowName;\n    }\n\n    center(): StationCenter {\n        return this.rowCenter;\n    }\n\n    onLine(line: Line): StationOnLine {\n        if (line === this.line)\n            return this;\n        else\n            return this.center().onLine(line);\n    }\n}\n*/","import { Direction } from \"./Direction\";\nimport Line from \"./Line\";\nimport { OfficialLine } from \"./OfficialLine\";\nimport { Section } from \"./Section\";\nimport { Station1, StationSubstance, WritableStation } from \"./Station\";\n\nclass StationsDB {\n    private readonly map: Map<string, StationSubstance & WritableStation> = new Map();\n\n    get(name: string, key?: string): StationSubstance & WritableStation {\n        key = key || name;\n\n        const station = this.map.get(key);\n        if (station === undefined) {\n            const station = new Station1(name);\n            this.map.set(key, station);\n            return station;\n        } else {\n            return station;\n        }\n    }\n}\n\nclass XMLHandler {\n    linesDB = new Map<string, Line>();\n    stationsDB = new StationsDB();\n\n    handleStation(e: Element): StationSubstance {\n        if (e.tagName !== 'station') throw new Error();\n\n        const name = e.getAttribute('name');\n        if (name === null) throw new Error();\n        const key = e.getAttribute('key') || name;\n\n        const isSeasonal = e.hasAttribute('seasonal');\n        const station = this.stationsDB.get(key);\n        station.setOptions({ isSeasonal });\n        return station;\n    }\n\n    handleSection(e: Element): Line {\n        if (e.tagName !== 'section') throw new Error();\n\n        const lineKey = e.getAttribute('line');\n        if (lineKey === null) throw new Error();\n\n        const directionString = e.getAttribute('direction');\n        if (directionString === null) throw new Error();\n        if (directionString !== '+' && directionString !== '-') throw new Error();\n        const direction: Direction = directionString === '+' ? Direction.outbound : Direction.inbound;\n\n        const line: Line | undefined = this.linesDB.get(lineKey);\n        if (line === undefined) throw new Error();\n\n        const fromKey = e.getAttribute('from');\n        const toKey = e.getAttribute('to');\n\n        const from = fromKey === null ? undefined : this.stationsDB.get(fromKey);\n        const to = toKey === null ? undefined : this.stationsDB.get(toKey);\n\n        const section: Section = new Section({ line, direction, from, to });\n\n        const name: string | null = e.getAttribute('name');\n        if (name !== null) {\n            const key: string = e.getAttribute('key') || name;\n            this.linesDB.set(key, section);\n        }\n\n        return section;\n    }\n\n    handleRouteLine(e: Element): Line {\n        e;\n        /*\n        if (e.tagName !== 'route') throw new Error();\n\n        const stations: StationOnLine[] = [];\n        for (const child of Array.from(e.children)) {\n            switch (child.tagName) {\n                case 'station':\n                    const substance = this.handleStation(child);\n                    stations.push(substance);\n                    break;\n                case 'section':\n                    break;\n            }\n        }\n        */\n        return <Line><unknown>null;\n    }\n\n    handleOfficialLine(e: Element): Line {\n        if (e.tagName !== 'official') throw new Error();\n\n        const name = e.getAttribute('name');\n        if (name === null) throw new Error();\n\n        const key: string = e.getAttribute('key') || name;\n        const line = new OfficialLine(name);\n        this.linesDB.set(key, line);\n\n        const stations: {\n            substance: StationSubstance,\n            distanceFromStart: number | null,\n            code?: string | null\n        }[] = [];\n        for (const stationXML of Array.from(e.children)) {\n            if (stationXML.tagName !== 'station') continue;\n\n            const substance = this.handleStation(stationXML);\n            const distanceFromStartString = stationXML.getAttribute('distance');\n            const distanceFromStart = distanceFromStartString === null ? null : +distanceFromStartString;\n            const code = stationXML.getAttribute('code');\n\n            stations.push({ substance, distanceFromStart, code });\n        }\n        line.setStations(stations);\n        return line;\n    }\n\n    async handleImport(e: Element, baseURL: URL) {\n        if (e.tagName !== 'import') throw new Error();\n\n        const src = e.getAttribute('src');\n        if (src === null) throw new Error();\n\n        const url: URL = new URL(src, baseURL);\n        const srcText = await (await fetch(url.toString())).text();\n        const parser = new DOMParser();\n        const srcXml = parser.parseFromString(srcText, 'text/xml');\n        console.log(srcXml);\n\n        await this.handleXMLData(srcXml.children[0], baseURL);\n    }\n\n    async handleXMLData(data: Element, baseURL: URL) {\n        if (data.tagName !== 'data') throw new Error();\n\n        for (const child of Array.from(data.children)) {\n            switch (child.tagName) {\n                case 'import':\n                    await this.handleImport(child, baseURL);\n                    break;\n\n                case 'station':\n                    this.handleStation(child);\n                    break;\n\n                case 'official':\n                    this.handleOfficialLine(child);\n                    break;\n\n                case 'route':\n                    this.handleRouteLine(child);\n                    break;\n\n                case 'section':\n                    this.handleSection(child);\n                    break;\n            }\n        }\n    }\n}\n\n(async () => {\n    const indexXML = new URL('./sample/index.xml', location.href);\n    const text = await (await fetch(indexXML.toString())).text();\n    const parser = new DOMParser();\n    const xml = parser.parseFromString(text, 'text/xml');\n    console.log(xml);\n\n    const handler = new XMLHandler();\n    await handler.handleXMLData(xml.children[0], indexXML);\n    console.log(handler);\n})();\n"],"sourceRoot":""}